#Este código Python utiliza a biblioteca **PyPDF2** para processar um arquivo PDF, extraindo informações específicas de cada página e salvando cada página como um arquivo PDF separado.
Este código é ideal para dividir arquivos PDF e salvar cada página com um nome específico baseado em informações extraídas do próprio conteúdo do PDF.

from PyPDF2 import PdfReader, PdfWriter
import re
import os

# Solicitar ao usuário o caminho do arquivo PDF
input_pdf_path = input("Digite o caminho completo do arquivo PDF que deseja processar: ")

# Solicitar ao usuário o local onde deseja salvar os arquivos
output_folder = input("Digite o caminho da pasta onde deseja salvar os arquivos: ")

# Verificar se a pasta existe. Se não existir, criar a pasta.
if not os.path.exists(output_folder):
    os.makedirs(output_folder)
    print(f"Pasta '{output_folder}' criada com sucesso.")

# Ler o arquivo PDF
reader = PdfReader(input_pdf_path)

# Função para sanitizar nomes de arquivos
def sanitize_filename(filename):
    # Caracteres inválidos no Windows
    invalid_chars = r'<>:"/\|?*'
    # Substitui caracteres inválidos por "_"
    for char in invalid_chars:
        filename = filename.replace(char, "_")
    return filename

# Função para extrair o número da NF-e e a razão social
def extract_info(text):
    # Regex para extrair o número da NF-e
    nfe_number_match = re.search(r"Nº\.\s*([\d\.]+)", text)
    if nfe_number_match:
        # Remove os pontos e zeros à esquerda
        nfe_number = nfe_number_match.group(1).replace(".", "").lstrip("0")
    else:
        nfe_number = "NF-e_Desconhecida"

    # Regex para extrair a razão social
    razao_social_match = re.search(r"NOME / RAZÃO SOCIAL\s*(.+)", text)
    if razao_social_match:
        # Pega apenas o nome/razão social (remove "CNPJ / CPF" e outras informações)
        razao_social = razao_social_match.group(1).split("CNPJ / CPF")[0].strip()
    else:
        razao_social = "Razao_Social_Desconhecida"

    return nfe_number, razao_social

# Loop para criar um arquivo PDF para cada página
for i, page in enumerate(reader.pages):
    writer = PdfWriter()
    writer.add_page(page)

    # Extrair o texto da página
    text = page.extract_text()

    # Depuração: Exibir o texto extraído
    print(f"Texto da página {i + 1}:\n{text}\n{'-' * 50}')

    # Extrair o número da NF-e e a razão social
    nfe_number, razao_social = extract_info(text)

    # Criar o nome do arquivo no padrão desejado
    output_filename = f"NF {nfe_number} {razao_social}.pdf"
    # Sanitizar o nome do arquivo
    output_filename = sanitize_filename(output_filename)
    # Caminho completo do arquivo de saída
    output_path = os.path.join(output_folder, output_filename)

    # Salvar cada página como um arquivo separado
    with open(output_path, "wb") as output_pdf:
        writer.write(output_pdf)
    print(f"Página {i + 1} salva como {output_path}")

print("PDF dividido com sucesso!")
```

